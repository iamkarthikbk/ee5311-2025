/* Generated by Yosys 0.51+107 (git sha1 f03b44959, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */

module P(A, P, B);
  wire _0_;
  wire _1_;
  wire _2_;
  input A;
  wire A;
  input B;
  wire B;
  output P;
  wire P;
  sky130_fd_sc_hd__xor2_1 _3_ (
    .A(_1_),
    .B(_0_),
    .X(_2_)
  );
  assign _1_ = B;
  assign _0_ = A;
  assign P = _2_;
endmodule

module and4(p0, p1, bypass, p2, p3);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  wire _4_;
  wire _5_;
  wire _6_;
  output bypass;
  wire bypass;
  input p0;
  wire p0;
  input p1;
  wire p1;
  input p2;
  wire p2;
  input p3;
  wire p3;
  sky130_fd_sc_hd__and4_1 _7_ (
    .A(_4_),
    .B(_3_),
    .C(_5_),
    .D(_6_),
    .X(_2_)
  );
  assign _4_ = p1;
  assign _3_ = p0;
  assign _5_ = p2;
  assign _6_ = p3;
  assign bypass = _2_;
endmodule

module cba16(clk, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16, cout, a1, b1, a2
, b2, a3, b3, a4, b4, a5, b5, a6, b6, a7, b7, a8, b8, a9, b9, a10, b10, a11, b11, a12, b12
, a13, b13, a14, b14, a15, b15, a16, b16, cin);
  input a1;
  wire a1;
  input a10;
  wire a10;
  input a11;
  wire a11;
  input a12;
  wire a12;
  input a13;
  wire a13;
  input a14;
  wire a14;
  input a15;
  wire a15;
  input a16;
  wire a16;
  input a2;
  wire a2;
  input a3;
  wire a3;
  input a4;
  wire a4;
  input a5;
  wire a5;
  input a6;
  wire a6;
  input a7;
  wire a7;
  input a8;
  wire a8;
  input a9;
  wire a9;
  input b1;
  wire b1;
  input b10;
  wire b10;
  input b11;
  wire b11;
  input b12;
  wire b12;
  input b13;
  wire b13;
  input b14;
  wire b14;
  input b15;
  wire b15;
  input b16;
  wire b16;
  input b2;
  wire b2;
  input b3;
  wire b3;
  input b4;
  wire b4;
  input b5;
  wire b5;
  input b6;
  wire b6;
  input b7;
  wire b7;
  input b8;
  wire b8;
  input b9;
  wire b9;
  input cin;
  wire cin;
  input clk;
  wire clk;
  output cout;
  wire cout;
  wire net1;
  wire net10;
  wire net11;
  wire net12;
  wire net13;
  wire net14;
  wire net15;
  wire net16;
  wire net17;
  wire net18;
  wire net19;
  wire net2;
  wire net20;
  wire net21;
  wire net22;
  wire net23;
  wire net24;
  wire net25;
  wire net26;
  wire net27;
  wire net28;
  wire net29;
  wire net3;
  wire net30;
  wire net31;
  wire net32;
  wire net33;
  wire net34;
  wire net35;
  wire net36;
  wire net37;
  wire net38;
  wire net39;
  wire net4;
  wire net5;
  wire net6;
  wire net7;
  wire net8;
  wire net9;
  wire rg_a1;
  wire rg_a10;
  wire rg_a11;
  wire rg_a12;
  wire rg_a13;
  wire rg_a14;
  wire rg_a15;
  wire rg_a16;
  wire rg_a2;
  wire rg_a3;
  wire rg_a4;
  wire rg_a5;
  wire rg_a6;
  wire rg_a7;
  wire rg_a8;
  wire rg_a9;
  wire rg_b1;
  wire rg_b10;
  wire rg_b11;
  wire rg_b12;
  wire rg_b13;
  wire rg_b14;
  wire rg_b15;
  wire rg_b16;
  wire rg_b2;
  wire rg_b3;
  wire rg_b4;
  wire rg_b5;
  wire rg_b6;
  wire rg_b7;
  wire rg_b8;
  wire rg_b9;
  wire rg_cin;
  wire rg_cout;
  wire rg_s1;
  wire rg_s10;
  wire rg_s11;
  wire rg_s12;
  wire rg_s13;
  wire rg_s14;
  wire rg_s15;
  wire rg_s16;
  wire rg_s2;
  wire rg_s3;
  wire rg_s4;
  wire rg_s5;
  wire rg_s6;
  wire rg_s7;
  wire rg_s8;
  wire rg_s9;
  output s1;
  wire s1;
  output s10;
  wire s10;
  output s11;
  wire s11;
  output s12;
  wire s12;
  output s13;
  wire s13;
  output s14;
  wire s14;
  output s15;
  wire s15;
  output s16;
  wire s16;
  output s2;
  wire s2;
  output s3;
  wire s3;
  output s4;
  wire s4;
  output s5;
  wire s5;
  output s6;
  wire s6;
  output s7;
  wire s7;
  output s8;
  wire s8;
  output s9;
  wire s9;
  wire wr_cout;
  wire wr_s1;
  wire wr_s10;
  wire wr_s11;
  wire wr_s12;
  wire wr_s13;
  wire wr_s14;
  wire wr_s15;
  wire wr_s16;
  wire wr_s2;
  wire wr_s3;
  wire wr_s4;
  wire wr_s5;
  wire wr_s6;
  wire wr_s7;
  wire wr_s8;
  wire wr_s9;
  sky130_fd_sc_hd__dfxtp_1 _00_ (
    .CLK(clk),
    .D(a1),
    .Q(rg_a1)
  );
  sky130_fd_sc_hd__dfxtp_1 _01_ (
    .CLK(clk),
    .D(b1),
    .Q(rg_b1)
  );
  sky130_fd_sc_hd__dfxtp_1 _02_ (
    .CLK(clk),
    .D(a2),
    .Q(rg_a2)
  );
  sky130_fd_sc_hd__dfxtp_1 _03_ (
    .CLK(clk),
    .D(b2),
    .Q(rg_b2)
  );
  sky130_fd_sc_hd__dfxtp_1 _04_ (
    .CLK(clk),
    .D(a3),
    .Q(rg_a3)
  );
  sky130_fd_sc_hd__dfxtp_1 _05_ (
    .CLK(clk),
    .D(b3),
    .Q(rg_b3)
  );
  sky130_fd_sc_hd__dfxtp_1 _06_ (
    .CLK(clk),
    .D(a4),
    .Q(rg_a4)
  );
  sky130_fd_sc_hd__dfxtp_1 _07_ (
    .CLK(clk),
    .D(b4),
    .Q(rg_b4)
  );
  sky130_fd_sc_hd__dfxtp_1 _08_ (
    .CLK(clk),
    .D(a5),
    .Q(rg_a5)
  );
  sky130_fd_sc_hd__dfxtp_1 _09_ (
    .CLK(clk),
    .D(b5),
    .Q(rg_b5)
  );
  sky130_fd_sc_hd__dfxtp_1 _10_ (
    .CLK(clk),
    .D(a6),
    .Q(rg_a6)
  );
  sky130_fd_sc_hd__dfxtp_1 _11_ (
    .CLK(clk),
    .D(b6),
    .Q(rg_b6)
  );
  sky130_fd_sc_hd__dfxtp_1 _12_ (
    .CLK(clk),
    .D(a7),
    .Q(rg_a7)
  );
  sky130_fd_sc_hd__dfxtp_1 _13_ (
    .CLK(clk),
    .D(b7),
    .Q(rg_b7)
  );
  sky130_fd_sc_hd__dfxtp_1 _14_ (
    .CLK(clk),
    .D(a8),
    .Q(rg_a8)
  );
  sky130_fd_sc_hd__dfxtp_1 _15_ (
    .CLK(clk),
    .D(b8),
    .Q(rg_b8)
  );
  sky130_fd_sc_hd__dfxtp_1 _16_ (
    .CLK(clk),
    .D(a9),
    .Q(rg_a9)
  );
  sky130_fd_sc_hd__dfxtp_1 _17_ (
    .CLK(clk),
    .D(b9),
    .Q(rg_b9)
  );
  sky130_fd_sc_hd__dfxtp_1 _18_ (
    .CLK(clk),
    .D(a10),
    .Q(rg_a10)
  );
  sky130_fd_sc_hd__dfxtp_1 _19_ (
    .CLK(clk),
    .D(b10),
    .Q(rg_b10)
  );
  sky130_fd_sc_hd__dfxtp_1 _20_ (
    .CLK(clk),
    .D(a11),
    .Q(rg_a11)
  );
  sky130_fd_sc_hd__dfxtp_1 _21_ (
    .CLK(clk),
    .D(b11),
    .Q(rg_b11)
  );
  sky130_fd_sc_hd__dfxtp_1 _22_ (
    .CLK(clk),
    .D(a12),
    .Q(rg_a12)
  );
  sky130_fd_sc_hd__dfxtp_1 _23_ (
    .CLK(clk),
    .D(b12),
    .Q(rg_b12)
  );
  sky130_fd_sc_hd__dfxtp_1 _24_ (
    .CLK(clk),
    .D(a13),
    .Q(rg_a13)
  );
  sky130_fd_sc_hd__dfxtp_1 _25_ (
    .CLK(clk),
    .D(b13),
    .Q(rg_b13)
  );
  sky130_fd_sc_hd__dfxtp_1 _26_ (
    .CLK(clk),
    .D(a14),
    .Q(rg_a14)
  );
  sky130_fd_sc_hd__dfxtp_1 _27_ (
    .CLK(clk),
    .D(b14),
    .Q(rg_b14)
  );
  sky130_fd_sc_hd__dfxtp_1 _28_ (
    .CLK(clk),
    .D(a15),
    .Q(rg_a15)
  );
  sky130_fd_sc_hd__dfxtp_1 _29_ (
    .CLK(clk),
    .D(b15),
    .Q(rg_b15)
  );
  sky130_fd_sc_hd__dfxtp_1 _30_ (
    .CLK(clk),
    .D(a16),
    .Q(rg_a16)
  );
  sky130_fd_sc_hd__dfxtp_1 _31_ (
    .CLK(clk),
    .D(b16),
    .Q(rg_b16)
  );
  sky130_fd_sc_hd__dfxtp_1 _32_ (
    .CLK(clk),
    .D(cin),
    .Q(rg_cin)
  );
  sky130_fd_sc_hd__dfxtp_1 _33_ (
    .CLK(clk),
    .D(wr_s1),
    .Q(rg_s1)
  );
  sky130_fd_sc_hd__dfxtp_1 _34_ (
    .CLK(clk),
    .D(wr_s2),
    .Q(rg_s2)
  );
  sky130_fd_sc_hd__dfxtp_1 _35_ (
    .CLK(clk),
    .D(wr_s3),
    .Q(rg_s3)
  );
  sky130_fd_sc_hd__dfxtp_1 _36_ (
    .CLK(clk),
    .D(wr_s4),
    .Q(rg_s4)
  );
  sky130_fd_sc_hd__dfxtp_1 _37_ (
    .CLK(clk),
    .D(wr_s5),
    .Q(rg_s5)
  );
  sky130_fd_sc_hd__dfxtp_1 _38_ (
    .CLK(clk),
    .D(wr_s6),
    .Q(rg_s6)
  );
  sky130_fd_sc_hd__dfxtp_1 _39_ (
    .CLK(clk),
    .D(wr_s7),
    .Q(rg_s7)
  );
  sky130_fd_sc_hd__dfxtp_1 _40_ (
    .CLK(clk),
    .D(wr_s8),
    .Q(rg_s8)
  );
  sky130_fd_sc_hd__dfxtp_1 _41_ (
    .CLK(clk),
    .D(wr_s9),
    .Q(rg_s9)
  );
  sky130_fd_sc_hd__dfxtp_1 _42_ (
    .CLK(clk),
    .D(wr_s10),
    .Q(rg_s10)
  );
  sky130_fd_sc_hd__dfxtp_1 _43_ (
    .CLK(clk),
    .D(wr_s11),
    .Q(rg_s11)
  );
  sky130_fd_sc_hd__dfxtp_1 _44_ (
    .CLK(clk),
    .D(wr_s12),
    .Q(rg_s12)
  );
  sky130_fd_sc_hd__dfxtp_1 _45_ (
    .CLK(clk),
    .D(wr_s13),
    .Q(rg_s13)
  );
  sky130_fd_sc_hd__dfxtp_1 _46_ (
    .CLK(clk),
    .D(wr_s14),
    .Q(rg_s14)
  );
  sky130_fd_sc_hd__dfxtp_1 _47_ (
    .CLK(clk),
    .D(wr_s15),
    .Q(rg_s15)
  );
  sky130_fd_sc_hd__dfxtp_1 _48_ (
    .CLK(clk),
    .D(wr_s16),
    .Q(rg_s16)
  );
  sky130_fd_sc_hd__dfxtp_1 _49_ (
    .CLK(clk),
    .D(wr_cout),
    .Q(rg_cout)
  );
  fa x1 (
    .a(rg_a1),
    .b(rg_b1),
    .cin(rg_cin),
    .cout(net4),
    .sum(wr_s1)
  );
  mux21 x10 (
    .in0(net6),
    .in1(net5),
    .out(net10),
    .select_high(net25)
  );
  fa x11 (
    .a(rg_a9),
    .b(rg_b9),
    .cin(net10),
    .cout(net14),
    .sum(wr_s9)
  );
  fa x12 (
    .a(rg_a10),
    .b(rg_b10),
    .cin(net14),
    .cout(net13),
    .sum(wr_s10)
  );
  fa x13 (
    .a(rg_a11),
    .b(rg_b11),
    .cin(net13),
    .cout(net12),
    .sum(wr_s11)
  );
  fa x14 (
    .a(rg_a12),
    .b(rg_b12),
    .cin(net12),
    .cout(net11),
    .sum(wr_s12)
  );
  mux21 x15 (
    .in0(net11),
    .in1(net10),
    .out(net15),
    .select_high(net30)
  );
  fa x16 (
    .a(rg_a13),
    .b(rg_b13),
    .cin(net15),
    .cout(net19),
    .sum(wr_s13)
  );
  fa x17 (
    .a(rg_a14),
    .b(rg_b14),
    .cin(net19),
    .cout(net18),
    .sum(wr_s14)
  );
  fa x18 (
    .a(rg_a15),
    .b(rg_b15),
    .cin(net18),
    .cout(net17),
    .sum(wr_s15)
  );
  fa x19 (
    .a(rg_a16),
    .b(rg_b16),
    .cin(net17),
    .cout(net16),
    .sum(wr_s16)
  );
  fa x2 (
    .a(rg_a2),
    .b(rg_b2),
    .cin(net4),
    .cout(net3),
    .sum(wr_s2)
  );
  mux21 x20 (
    .in0(net16),
    .in1(net15),
    .out(wr_cout),
    .select_high(net35)
  );
  P x21 (
    .A(rg_a1),
    .B(rg_b1),
    .P(net21)
  );
  P x22 (
    .A(rg_a2),
    .B(rg_b2),
    .P(net22)
  );
  P x23 (
    .A(rg_a3),
    .B(rg_b3),
    .P(net23)
  );
  P x24 (
    .A(rg_a4),
    .B(rg_b4),
    .P(net24)
  );
  P x25 (
    .A(rg_a5),
    .B(rg_b5),
    .P(net26)
  );
  P x26 (
    .A(rg_a6),
    .B(rg_b6),
    .P(net27)
  );
  P x27 (
    .A(rg_a7),
    .B(rg_b7),
    .P(net28)
  );
  P x28 (
    .A(rg_a8),
    .B(rg_b8),
    .P(net29)
  );
  P x29 (
    .A(rg_a9),
    .B(rg_b9),
    .P(net31)
  );
  fa x3 (
    .a(rg_a3),
    .b(rg_b3),
    .cin(net3),
    .cout(net2),
    .sum(wr_s3)
  );
  P x30 (
    .A(rg_a10),
    .B(rg_b10),
    .P(net32)
  );
  P x31 (
    .A(rg_a11),
    .B(rg_b11),
    .P(net33)
  );
  P x32 (
    .A(rg_a12),
    .B(rg_b12),
    .P(net34)
  );
  P x33 (
    .A(rg_a13),
    .B(rg_b13),
    .P(net36)
  );
  P x34 (
    .A(rg_a14),
    .B(rg_b14),
    .P(net37)
  );
  P x35 (
    .A(rg_a15),
    .B(rg_b15),
    .P(net38)
  );
  P x36 (
    .A(rg_a16),
    .B(rg_b16),
    .P(net39)
  );
  and4 x37 (
    .bypass(net20),
    .p0(net21),
    .p1(net22),
    .p2(net23),
    .p3(net24)
  );
  and4 x38 (
    .bypass(net25),
    .p0(net26),
    .p1(net27),
    .p2(net28),
    .p3(net29)
  );
  and4 x39 (
    .bypass(net30),
    .p0(net31),
    .p1(net32),
    .p2(net33),
    .p3(net34)
  );
  fa x4 (
    .a(rg_a4),
    .b(rg_b4),
    .cin(net2),
    .cout(net1),
    .sum(wr_s4)
  );
  and4 x40 (
    .bypass(net35),
    .p0(net36),
    .p1(net37),
    .p2(net38),
    .p3(net39)
  );
  mux21 x5 (
    .in0(net1),
    .in1(cin),
    .out(net5),
    .select_high(net20)
  );
  fa x6 (
    .a(rg_a5),
    .b(rg_b5),
    .cin(net5),
    .cout(net9),
    .sum(wr_s5)
  );
  fa x7 (
    .a(rg_a6),
    .b(rg_b6),
    .cin(net9),
    .cout(net8),
    .sum(wr_s6)
  );
  fa x8 (
    .a(rg_a7),
    .b(rg_b7),
    .cin(net8),
    .cout(net7),
    .sum(wr_s7)
  );
  fa x9 (
    .a(rg_a8),
    .b(rg_b8),
    .cin(net7),
    .cout(net6),
    .sum(wr_s8)
  );
  assign cout = rg_cout;
  assign s1 = rg_s1;
  assign s10 = rg_s10;
  assign s11 = rg_s11;
  assign s12 = rg_s12;
  assign s13 = rg_s13;
  assign s14 = rg_s14;
  assign s15 = rg_s15;
  assign s16 = rg_s16;
  assign s2 = rg_s2;
  assign s3 = rg_s3;
  assign s4 = rg_s4;
  assign s5 = rg_s5;
  assign s6 = rg_s6;
  assign s7 = rg_s7;
  assign s8 = rg_s8;
  assign s9 = rg_s9;
endmodule

module fa(a, sum, b, cout, cin);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  wire _4_;
  wire _5_;
  wire _6_;
  wire _7_;
  input a;
  wire a;
  input b;
  wire b;
  input cin;
  wire cin;
  output cout;
  wire cout;
  output sum;
  wire sum;
  sky130_fd_sc_hd__xor3_1 _8_ (
    .A(_5_),
    .B(_3_),
    .C(_4_),
    .X(_7_)
  );
  sky130_fd_sc_hd__maj3_1 _9_ (
    .A(_5_),
    .B(_3_),
    .C(_4_),
    .X(_6_)
  );
  assign _5_ = cin;
  assign _3_ = a;
  assign _4_ = b;
  assign sum = _7_;
  assign cout = _6_;
endmodule

module mux21(in0, in1, out, select_high);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  input in0;
  wire in0;
  input in1;
  wire in1;
  output out;
  wire out;
  input select_high;
  wire select_high;
  sky130_fd_sc_hd__mux2_1 _4_ (
    .A0(_0_),
    .A1(_1_),
    .S(_3_),
    .X(_2_)
  );
  assign _0_ = in0;
  assign _1_ = in1;
  assign _3_ = select_high;
  assign out = _2_;
endmodule
